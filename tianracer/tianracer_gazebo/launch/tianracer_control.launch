<?xml version='1.0'?>

<launch>
  <arg name="robot_name" default="tianracer"/>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find tianracer_gazebo)/config/tianracer_control.yaml" command="load" ns="$(arg robot_name)"/>
  <!-- load the controllers -->
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="$(arg robot_name)" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_steering_hinge_position_controller right_steering_hinge_position_controller
                                            joint_state_controller"/>

	<!--joint_state_publisher nodeï¼Œpublish robot joint state-->
	<!--<node name = "robot_state_publisher" pkg = "robot_state_publisher" type = "state_publisher">-->
  <group ns="$(arg robot_name)">
      <param name="robot_name" type="string" value="$(arg robot_name)"/>
      <node name= "robot_state_publisher" pkg= "robot_state_publisher" type= "robot_state_publisher">
        <remap from="/joint_states" to="/$(arg robot_name)/joint_states"/>
      </node>
      <!-- servo node -->
      <node pkg="tianracer_gazebo" type="servo_commands.py" name="servo_commands" output="screen"/>

      <!-- servo node -->
      <node pkg="tianracer_gazebo" type="transform.py" name="nav_sim" output="screen"/>
      <!-- Allow for Gazebo to broadcast odom -->
      <node pkg="tianracer_gazebo" name="gazebo_odometry_node" type="gazebo_odometry.py" output="screen"/> 
  </group>
  

</launch>
